version: '3.8'

services:
  # Nginx Web Server (Development)
  nginx:
    image: nginx:alpine
    container_name: laravel-recipes-nginx-dev
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./src:/var/www/html
      - ./docker/nginx/nginx.dev.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - laravel-recipes-dev

  # Laravel Application (Development)
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile.dev
    container_name: laravel-recipes-app-dev
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./src:/var/www/html
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - APP_KEY=${APP_KEY}
      - DB_CONNECTION=mongodb
      - DB_HOST=mongodb
      - DB_PORT=27017
      - DB_DATABASE=${DB_DATABASE:-laravel_recipes_dev}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis_password}
      - REDIS_PORT=6379
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - QUEUE_CONNECTION=sync
    ports:
      - "9000:9000"
    depends_on:
      - mongodb
      - redis
    networks:
      - laravel-recipes-dev

  # MongoDB Database (Development)
  mongodb:
    image: mongo:7.0
    container_name: laravel-recipes-mongodb-dev
    restart: unless-stopped
    ports:
      - "27018:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-password}
      MONGO_INITDB_DATABASE: ${DB_DATABASE:-laravel_recipes_dev}
    volumes:
      - mongodb_dev_data:/data/db
      - ./docker/mongodb/init:/docker-entrypoint-initdb.d
    networks:
      - laravel-recipes-dev

  # Redis Cache & Session Store (Development)
  redis:
    image: redis:alpine
    container_name: laravel-recipes-redis-dev
    restart: unless-stopped
    ports:
      - "6380:6379"
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis_password}
    volumes:
      - redis_dev_data:/data
    networks:
      - laravel-recipes-dev

  # Node.js for Frontend Build Tools (Development Only)
  node:
    image: node:20-alpine
    container_name: laravel-recipes-node-dev
    working_dir: /var/www/html
    volumes:
      - ./src:/var/www/html
    command: sh -c "npm install && npm run dev"
    ports:
      - "5173:5173"
    networks:
      - laravel-recipes-dev

  # MongoDB Express (Development Database Admin)
  mongo-express:
    image: mongo-express:latest
    container_name: laravel-recipes-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USERNAME:-admin}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD:-password}
      ME_CONFIG_MONGODB_URL: mongodb://admin:password@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    depends_on:
      - mongodb
    networks:
      - laravel-recipes-dev

  # Redis Commander (Development Redis Admin)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: laravel-recipes-redis-commander
    restart: unless-stopped
    ports:
      - "8082:8081"
    environment:
      REDIS_HOSTS: local:redis:6379:0:${REDIS_PASSWORD:-redis_password}
    depends_on:
      - redis
    networks:
      - laravel-recipes-dev

volumes:
  mongodb_dev_data:
    driver: local
  redis_dev_data:
    driver: local

networks:
  laravel-recipes-dev:
    driver: bridge
